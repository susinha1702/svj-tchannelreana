SVJEventSelectionStep1_mc16a:
  process:
    process_type: interpolated-script-cmd
    script: |
      /recast_auth/getkrb.sh
      source /home/atlas/release_setup.sh
      export PATHRESOLVER_ALLOWHTTPDOWNLOAD=1
      cd /analysis/build/
      source */setup.sh
      cd /analysis/run/
      echo {dxaod_file_mc16a}
      xrdcp {prw_file_mc16a} prw_mc16a.root
      xrdcp {tdp_file_path} tdpfile
      echo {dxaod_file_mc16a} > input.txt
      top-xaod {AT_config_file} input.txt
      rm prw_mc16a.root tdpfile
      cp -r /analysis/run {output_step1}
  publisher:
    publisher_type: interpolated-pub
    publish:
      selected_signal_mc16a: '{output_step1}/output.root'
  environment:
    environment_type: docker-encapsulated
    image: gitlab-registry.cern.ch/susinha/anatop
    imagetag: latest
    resources:
    - KRB5Auth
    - kerberos: true

SVJEventSelectionStep1_mc16d:
  process:
    process_type: interpolated-script-cmd
    script: |
      /recast_auth/getkrb.sh
      source /home/atlas/release_setup.sh
      export PATHRESOLVER_ALLOWHTTPDOWNLOAD=1
      cd /analysis/build/
      source */setup.sh
      cd /analysis/run/
      echo {dxaod_file_mc16d}
      xrdcp {prw_file_mc16d} prw_mc16d.root
      xrdcp {tdp_file_path} tdpfile
      echo {dxaod_file_mc16d} > input.txt
      top-xaod {AT_config_file} input.txt
      rm prw_mc16d.root tdpfile
      cp -r /analysis/run {output_step1}
  publisher:
    publisher_type: interpolated-pub
    publish:
      selected_signal_mc16d: '{output_step1}/output.root'
  environment:
    environment_type: docker-encapsulated
    image: gitlab-registry.cern.ch/susinha/anatop
    imagetag: latest
    resources:
    - KRB5Auth
    - kerberos: true

SVJEventSelectionStep1_mc16e:
  process:
    process_type: interpolated-script-cmd
    script: |
      /recast_auth/getkrb.sh
      source /home/atlas/release_setup.sh
      export PATHRESOLVER_ALLOWHTTPDOWNLOAD=1
      cd /analysis/build/
      source */setup.sh
      cd /analysis/run/
      echo {dxaod_file_mc16e}
      xrdcp {prw_file_mc16e} prw_mc16e.root
      xrdcp {tdp_file_path} tdpfile
      echo {dxaod_file_mc16e} > input.txt
      top-xaod {AT_config_file} input.txt
      rm prw_mc16e.root tdpfile
      cp -r /analysis/run {output_step1}
  publisher:
    publisher_type: interpolated-pub
    publish:
      selected_signal_mc16e: '{output_step1}/output.root'
  environment:
    environment_type: docker-encapsulated
    image: gitlab-registry.cern.ch/susinha/anatop
    imagetag: latest
    resources:
    - KRB5Auth
    - kerberos: true


ruciostep:
  process:
    process_type: "string-interpolated-cmd"
    cmd: 'rucio get ATLAS_LAPP_SP:final_histos.root && cp ATLAS_LAPP_SP/final_histos.root {outputfile} && echo {outputfile} && du -sh {outputfile}'
  publisher:
    publisher_type: "frompar-pub"
    outputmap:
      outputfile: outputfile
  environment:
    environment_type: "docker-encapsulated"
    image: "docker.io/reanahub/reana-auth-rucio"
    imagetag: "1.1.1"
    resources:
      - voms_proxy: true
      - rucio: true

SVJEventSelectionStep2:
  process:
    process_type: interpolated-script-cmd
    script: |
      source /home/atlas/release_setup.sh
      cp {input_step2_mc16a} input_mc16a.root
      cp {input_step2_mc16d} input_mc16d.root
      cp {input_step2_mc16e} input_mc16e.root
      #the wta is a user defined value for weighted sumofevents, and 1234 is just left for ease of script usage without much tweaking
      g++  `root-config --cflags`  `root-config --libs`  -o Analysisscript Analysisscript.C
      ./Analysisscript {dsid} {wta} input_mc16a.root mca 1234 signal
      cp outputfile.root output_mc16a.root
      ./Analysisscript {dsid} {wtd} input_mc16d.root mcd 1234 signal
      cp outputfile.root output_mc16d.root
      ./Analysisscript {dsid} {wte} input_mc16e.root mce 1234 signal
      cp outputfile.root output_mc16e.root
      hadd -f {output_step2} output_mc16a.root output_mc16e.root
  publisher:
    publisher_type: interpolated-pub
    publish:
      selected_signal: '{output_step2}'
  environment:
    environment_type: docker-encapsulated
    image: gitlab-registry.cern.ch/susinha/svj-tchannel
    imagetag: latest

SVJLimitSettingStep:
  process:
    process_type: interpolated-script-cmd
    interpreter: bash
    script: |
      source /release_setup.sh
      echo {input_limitsetting}
      echo SUKANYA {fitbghisto_file_path}
      mkdir -p final/Histograms output
      cp -r {input_limitsetting} output/output.root
      cp -r {fitbghisto_file_path} final/Histograms/final_bgonly.root
      trex-fitter hb /code/src/TRExFitter/run/sonly.config 
      hadd -f final/Histograms/final_histos.root final/Histograms/final_bgonly.root final_sonly/Histograms/final_sonly_histos.root
      trex-fitter b /code/src/TRExFitter/run/splusb.config
      trex-fitter w /code/src/TRExFitter/run/splusb.config 
      trex-fitter f /code/src/TRExFitter/run/splusb.config
      trex-fitter l /code/src/TRExFitter/run/splusb.config
      cp -r ./final {output_limitsetting}
  publisher:
    publisher_type: interpolated-pub
    publish:
      outputs: '{output_limitsetting}'
  environment:
    environment_type: docker-encapsulated  
    image: gitlab-registry.cern.ch/susinha/trexfitter_svjt
    imagetag: latest  
    resources:
    - KRB5Auth
    - kerberos: true



#      xrdcp {dxaod_file_mc16a} input_file.root

#      mkdir input_file
#      for f in $(xrdfs eosproject.cern.ch ls {dxaod_file_mc16a}); do
#        xrdcp root://eosproject.cern.ch//$f input_file/.
#      done
#      find "$(pwd)/input_file/" -type f > input.txt
#      echo ----------SUKANYA--------
#      more input.txt
